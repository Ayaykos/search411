{"version":3,"sources":["components/AppNavbar.js","MainMenu.js","components/Notice.js","Register.js","Login.js","components/generateStyleSheet.js","components/BackgroundSlider.js","App.js","Landing.js","serviceWorker.js","index.js","img/background.png"],"names":["AppNavbar","props","toggle","setState","dropdownOpen","state","isOpen","Navbar","color","Container","href","style","ButtonGroup","Button","ButtonDropdown","this","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","MainMenu","padding","Jumbotron","paddingBottom","display","justifyContent","bgcolor","to","process","className","Notice","Register","useState","tooltipOpen","setTooltipOpen","Tooltip","placement","target","id","Col","FormGroup","Input","type","placeholder","Login","textAlign","width","Form","generateStyleSheet","imagesCount","duration","transition","t","p1","Math","round","p2","p3","vendorBackfaceVisibility","vendor","vendorAnimation","vendorKeyframes","animation","keyframes","NAME","BackgroundSlider","images","React","useEffect","css","meta","head","document","getElementsByTagName","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","injectCss","length","map","img","key","backgroundImage","animationDelay","defaultProps","shuffleArray","array","i","j","floor","random","App","loggedIn","showLogin","showRegister","Toast","ToastHeader","ToastBody","exact","path","component","image1","Loading","loading","Spinner","height","size","Sent","console","log","sent","noemail","Alert","Landing","sendMessage","formData","FormData","append","GOOGLE_FORM_EMAIL_ID","email","axios","post","CORS_PROXY","GOOGLE_FORM_ACTION_URL","then","validate","catch","messageError","handleChange","event","a","value","checked","name","handleSubmit","preventDefault","validateEmail","username","password","password2","emailState","userExists","passMatch","bind","e","test","usertype","onSubmit","valid","invalid","onChange","LandingPage","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.dba9749c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, ButtonGroup, ButtonDropdown, \n        DropdownMenu, DropdownItem, \n        DropdownToggle, Collapse, Navbar,\n        NavbarToggler, NavbarBrand, Nav,\n        NavItem, NavLink, Container, Progress } from 'reactstrap';\n\n\nclass AppNavbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    })\n  }\n\n  render() {\n\n    return (\n    <div>\n      <Navbar color=\"success\">\n        <Container>\n          <a href=\"/search411/mock\" >\n            <h4 style={{color:\"white\"}}>Logo</h4>\n          </a>\n\n          <ButtonGroup>\n          <Button color=\"light\">Home</Button>\n\n          <Button color=\"light\">About</Button>\n          <Button color=\"light\">Contact</Button>\n          <Button color=\"light\">FAQ</Button>\n\n          <ButtonDropdown color=\"light\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret color=\"light\">\n              Settings\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem color=\"light\">Profile</DropdownItem>\n              <DropdownItem>Find Other Interns</DropdownItem>\n              <DropdownItem>Find Recruiters</DropdownItem>\n              <DropdownItem href=\"/search411/mock\">Sign Out</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </ButtonGroup >\n        <Button color=\"light\"href=\"/search411/\">Exit Mockup</Button>\n        </Container> \n\n      </Navbar>\n\n\n    </div>\n    )\n  }\n}\n\nexport default AppNavbar;","import React from 'react';\r\nimport {\r\n  Container, Jumbotron\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction MainMenu() {\r\n  return (\r\n    <div style={{padding:'0'}}>\r\n      <Jumbotron style={{paddingBottom:'9em'}}>\r\n      <p style={{display: 'flex', justifyContent: 'center'}}>\r\n      This doesn't have to be you.\r\n      </p>\r\n      <div style={{display: 'flex', justifyContent: 'center', \r\n        padding:\"2em\", bgcolor: \"grey\"}}>\r\n        <a href=\"/search411/mock\" >\r\n        <h1>Logo</h1>\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <Container style={{display: 'flex', justifyContent: 'center', padding:\"1em\",}}>\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/register\"} \r\n            className=\"btn btn-success\">Sign Up</NavLink>\r\n        </Container> \r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        Already a member?\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <NavLink to={process.env.PUBLIC_URL + \"/mock/login\"}>Sign In</NavLink>\r\n      </div>\r\n      </Jumbotron>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainMenu;","import React from 'react';\r\n\r\nfunction Notice() {\r\n  return (\r\n    <span style={{display: 'flex', justifyContent: 'center'}}>\r\n        Functionality is not present as website is a mockup.\r\n        Continue with any information.\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Notice;","import React, { useState } from \"react\";\nimport { Button, Tooltip, Container, Form, Col,\nFormGroup, Input, Jumbotron } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport Notice from './components/Notice'\n\nconst Register = (props) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n  return (  \n    <div>\n      <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \n      toggle={toggle}><Notice/></Tooltip>\n      <Jumbotron>\n      <div>\n        <h4 style={{color:'green',display: 'flex', \n        justifyContent: 'center'}}>Register</h4>\n      </div>\n      <Notice />\n      <Container className=\"App\" id=\"notice\">\n        <Col>\n          <FormGroup >\n            <Input type=\"username\" placeholder=\"email\"/>\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"email\"  placeholder=\"username\" />\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"password\" placeholder=\"password\" />\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"confirmpassword\" placeholder=\"Confirm Password\" />\n          </FormGroup>\n        </Col>\n        \n      </Container>\n      <div >\n        <div style={{display: 'flex', justifyContent: 'right'}}>\n          <Button color=\"success\">Submit {'>'}</Button>\n        </div>\n        <div style={{display: 'flex', justifyContent: 'right'}}>\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/\"}\n            className=\"btn btn-success\">Back</NavLink>\n        </div>\n      </div>\n    </Jumbotron>\n    </div>\n  );\n\n}\n\n\nexport default Register;","import React, {useState} from 'react';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Input,\r\n  Button, Tooltip \r\n} from 'reactstrap';\r\nimport Jumbotron from 'reactstrap/lib/Jumbotron';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Notice from './components/Notice'\r\nimport './css/Login.css';\r\n\r\n\r\nconst Login = (props) => {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <div>\r\n    <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \r\n      toggle={toggle}><Notice/></Tooltip>\r\n    <Jumbotron>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <Container className=\"App\">\r\n\r\n        <div style={{textAlign:\"center\", width:\"20em\"}}>\r\n          <h4 style={{color:\"green\"}}>Sign in and get grinding.</h4>\r\n        </div>\r\n        <Notice />\r\n          <Form className=\"form\" id=\"notice\">\r\n            <Col>\r\n              <FormGroup>\r\n                <Input type=\"email\" placeholder=\"Email Address\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Input type=\"password\" placeholder=\"Password\" />\r\n              </FormGroup >\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <a style={{color:\"green\"}} >Forgot your password?</a>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <a style={{color:\"green\"}} >Don't have an account?</a>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <Button color=\"success\">Let's go {'>'}</Button>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/\"}\r\n          className=\"btn btn-success\">Back</NavLink>\r\n        </div>\r\n      </div>\r\n    </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import * as vendor from 'css-vendor'\r\n\r\nconst generateStyleSheet = ({ imagesCount, duration, transition }) => {\r\n  const t = imagesCount * (duration + transition)\r\n  const p1 = Math.round(transition / t * 100)\r\n  const p2 = Math.round((duration + transition) / t * 100)\r\n  const p3 = Math.round(p2 * 1.1)\r\n\r\n  const vendorBackfaceVisibility = vendor.supportedProperty('backface-visibility')\r\n  const vendorAnimation = vendor.supportedProperty('animation')\r\n  const vendorKeyframes = vendor.supportedKeyframes('@keyframes')\r\n\r\n  let animation = ''\r\n  let keyframes = ''\r\n  if (vendorAnimation && vendorBackfaceVisibility && vendorKeyframes) {\r\n    animation = `${vendorBackfaceVisibility}: hidden;\r\n        ${vendorAnimation}: imageAnimation ${t}s linear infinite -0.5s;`\r\n\r\n    keyframes = `${vendorKeyframes} imageAnimation {\r\n          0% {\r\n            opacity: 0;\r\n            animation-timing-function: ease-in;\r\n          }\r\n          ${p1}% {\r\n            opacity: 1;\r\n            animation-timing-function: ease-out;\r\n          }\r\n          ${p2}% {\r\n            opacity: 1;\r\n          }\r\n          ${p3}% {\r\n            opacity: 0\r\n          }\r\n          100% {\r\n            opacity: 0\r\n          }\r\n        }`\r\n  }\r\n\r\n  return `#ReactBackgroundSlider > figure {\r\n        height: 100%;\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0px;\r\n        left: 0px;\r\n        color: transparent;\r\n        background-size: cover;\r\n        background-position: center center;\r\n        background-repeat: no-repeat;\r\n        opacity: 0;\r\n\r\n        z-index: -1000;\r\n        margin: 0;'\r\n        ${animation}\r\n      }\r\n      ${keyframes}\r\n    `\r\n}\r\n\r\nexport default generateStyleSheet","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateStyleSheet from './generateStyleSheet'\r\n\r\nconst NAME = 'ReactBackgroundSlider'\r\n\r\nconst injectCss = (css, meta) => {\r\n    const head = document.getElementsByTagName('head')[0]\r\n    const style = document.createElement('style')\r\n    style.setAttribute('type', 'text/css')\r\n    style.setAttribute('data-meta', meta)\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css\r\n    } else {\r\n      style.appendChild(document.createTextNode(css))\r\n    }\r\n    head.appendChild(style)\r\n  }\r\n  \r\n \r\nfunction BackgroundSlider ({\r\n  images,\r\n  duration,\r\n  transition\r\n}) {\r\n  React.useEffect(() => {\r\n    injectCss(\r\n      generateStyleSheet({\r\n        imagesCount: images.length,\r\n        duration,\r\n        transition\r\n      }),\r\n      NAME\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div id={NAME}>\r\n      {images.map((img, key) =>\r\n        <figure key={key}\r\n          style={{\r\n            backgroundImage: `url(${img})`,\r\n            animationDelay: `${(duration + transition) * key}s`\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBackgroundSlider.defaultProps = {\r\n  duration: 10,\r\n  transition: 2\r\n}\r\n\r\nBackgroundSlider.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  duration: PropTypes.number,\r\n  transition: PropTypes.number\r\n}\r\n\r\nexport default BackgroundSlider","import React, { Component } from 'react';\nimport { Container, Toast, ToastBody, ToastHeader, Jumbotron } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport AppNavbar from './components/AppNavbar';\nimport MainMenu from './MainMenu';\nimport Register from './Register';\nimport Login from './Login';\nimport BackgroundSlider from './components/BackgroundSlider'\nimport './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport image1 from './img/background.png'\n\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loggedIn: false,\n      showLogin: false,\n      showRegister: false,\n    }\n  }\n  render() {\n\n    return (\n      <div>\n        <Router>\n          <AppNavbar/>\n\n\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n            <div>\n            <Toast id =\"toast1\">\n              <ToastHeader>\n                @edgar-al-inpo\n              </ToastHeader>\n              <ToastBody>\n                ugh idk what to do im graduating next year<br></br>\n                rip life\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @racecar_\n              </ToastHeader>\n              <ToastBody>\n                you know school costs a lot of money, kinda needed that income :/\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @michelle_anderson\n              </ToastHeader>\n              <ToastBody>\n                I would appreciate a refund on 2020. Is a cancelled internship\n                warranty eligible?\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @eboy22\n              </ToastHeader>\n              <ToastBody>\n                Summer 2020 cancelled :( \n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @shrek\n              </ToastHeader>\n              <ToastBody>\n                I'm gonna stick with an unpaid internship for now, at\n                least I get some experience\n              </ToastBody>\n            </Toast>\n\n            </div>\n            <Switch>\n            <Toast style={{padding:'0'}}>\n              <ToastHeader>\n                @productname\n              </ToastHeader>\n\n              <Route exact path={process.env.PUBLIC_URL + \"/mock\"} \n                component={MainMenu}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/mock/register\"} \n                component={Register}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/mock/login\"} \n                component={Login}/>\n\n\n              </Toast>\n            </Switch>\n          </div>\n          \n        </Router>\n\n        <BackgroundSlider\n          images={shuffleArray([image1])}\n          duration={60} transition={20} />\n      </div>\n    );\n  }\n}\n\nexport { App } ;\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom';\r\nimport {App } from './App';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Jumbotron,\r\n  Button,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport axios from 'axios';\r\n\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>{this.props.loading ? <Spinner style={{ width: '3rem', height: '3rem' }} size=\"sm\" color=\"primary\" /> : <h1></h1>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Sent extends Component {\r\n  render() {\r\n    console.log(this.props.sent, !this.props.loading, !this.props.noemail)\r\n    return (\r\n      <div>\r\n        \r\n      <Alert color=\"success\" isOpen={this.props.sent && !this.props.loading && !this.props.noemail}>Thank you!</Alert>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      loading: false,\r\n      sent: 0,\r\n      validate: {\r\n        emailState: \"\",\r\n        userExists: false,\r\n        passMatch: true,\r\n        noemail: false,\r\n      },\r\n      \r\n      GOOGLE_FORM_EMAIL_ID: 'entry.1917533847',\r\n      GOOGLE_FORM_ACTION_URL: 'https://docs.google.com/forms/d/e/1FAIpQLSdKjV8dHasVOwux7YBK9LEuaMUhhYoqFaPrpwxNBSrDBbXNBQ/formResponse',\r\n      CORS_PROXY: 'https://cors-anywhere.herokuapp.com/'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  sendMessage = () => {  \r\n    const formData = new FormData() \r\n    formData.append(this.state.GOOGLE_FORM_EMAIL_ID, this.state.email)\r\n    this.setState({     \r\n      loading: true\r\n    })  \r\n    axios.post(this.state.CORS_PROXY + this.state.GOOGLE_FORM_ACTION_URL, formData)\r\n      .then(() => {     \r\n        this.setState({     \r\n          email: '',\r\n          validate: {\r\n            noemail: false\r\n          },\r\n          loading: false,\r\n          sent: 1\r\n        })  \r\n    }).catch(() => {      \r\n      this.setState({        \r\n        messageError: true, \r\n        loading: false  \r\n      })  \r\n    })\r\n  }\r\n  validateEmail(e) {\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const { validate } = this.state;\r\n    if (this.state.email != \"\"){\r\n      validate.noemail = false;\r\n    }\r\n    if (emailRex.test(e.target.value)) {\r\n      validate.emailState = \"has-success\";\r\n    } else {\r\n      validate.emailState = \"has-danger\";\r\n    }\r\n    this.setState({ validate });\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const { target } = event;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const { name } = target;\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {  \r\n    event.preventDefault()\r\n    if (this.state.email != \"\"){\r\n      this.sendMessage()\r\n    } else{\r\n      this.validateEmail(event);\r\n      const { validate } = this.state;\r\n      validate.noemail = true;\r\n      this.setState({ validate });\r\n    }\r\n    \r\n  } //other stuff  }\r\n  render() {\r\n    const { email, username, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <hr className=\"my-2\" />\r\n          <p className=\"lead\" style={{display: 'flex', \r\n            justifyContent: 'center'}}>Description of our problem/solution.</p>\r\n          <hr className=\"my-2\" />\r\n          <p style={{display: 'flex', justifyContent: 'center'}}>Extended description.</p>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/\"} className=\"btn btn-primary\">Mock Website</NavLink>\r\n          </div>\r\n        </Jumbotron>\r\n      <div>\r\n        <h3 style={{textAlign:\"center\"}}>Interested?</h3>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n      <h2 style={{textAlign:\"center\"}}>{this.props.usertype}</h2>\r\n      \r\n      <Container className=\"App\" style={{display: 'flex', justifyContent: 'center'}}>\r\n\r\n        <Form  className=\"form\" onSubmit={this.handleSubmit}>\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                valid={this.state.validate.emailState === \"has-success\"}\r\n                invalid={this.state.validate.emailState === \"has-danger\"}\r\n                onChange={(e) => {\r\n                  this.validateEmail(e);\r\n                  this.handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            \r\n          </Col>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <Button >Submit</Button>\r\n          </div>\r\n        </Form>\r\n        \r\n      </Container>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n        <Alert color=\"danger\" isOpen={this.state.validate.noemail}>Please enter an email.</Alert>\r\n        </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n\r\n        <Loading loading={this.state.loading}/>\r\n        <Sent sent={this.state.sent} loading={this.state.loading} noemail={this.state.validate.noemail}/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <div>\r\n              <Switch>\r\n                <Route exact path={process.env.PUBLIC_URL +\"/\"} component={Landing} />\r\n                <Route exact path={process.env.PUBLIC_URL +\"/mock\"} component={App} />\r\n                <Route exact path={process.env.PUBLIC_URL +\"/mock/login\"} component={App} />\r\n                <Route exact path={process.env.PUBLIC_URL +\"/mock/register\"} component={App} />\r\n              </Switch>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default LandingPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport LandingPage from './Landing';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <LandingPage />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.9a157536.png\";"],"sourceRoot":""}