{"version":3,"sources":["components/AppNavbar.js","MainMenu.js","components/Notice.js","Register.js","Login.js","Comments.js","Recruiters.js","Profile.js","components/generateStyleSheet.js","components/BackgroundSlider.js","App.js","Landing.js","serviceWorker.js","index.js","img/mainlogo.png","img/background.png"],"names":["RegularSettings","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","style","color","DropdownMenu","right","to","process","DropdownItem","href","HamburgerSettings","padding","Button","AppNavbar","useState","isOpen","setIsOpen","Navbar","light","expand","maxWidth","src","NavLogo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","className","MainMenu","Toast","ToastHeader","Jumbotron","paddingBottom","textAlign","display","justifyContent","bgcolor","MainLogo","Container","Notice","props","type","Register","tooltipOpen","setTooltipOpen","Tooltip","placement","target","toggle","id","Col","FormGroup","Input","placeholder","Login","width","Form","Comments","logged_in","Badge","UncontrolledCollapse","toggler","pill","ToastBody","background","paddingLeft","Recruiters","cSelected","setCSelected","onCheckboxBtnClick","selected","index","indexOf","push","splice","fluid","ButtonGroup","outline","active","includes","Profile","paddingRight","Row","xs","generateStyleSheet","imagesCount","duration","transition","t","p1","Math","round","p2","p3","vendorBackfaceVisibility","vendor","vendorAnimation","vendorKeyframes","animation","keyframes","NAME","BackgroundSlider","images","React","useEffect","css","meta","head","document","getElementsByTagName","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","injectCss","length","map","img","key","backgroundImage","animationDelay","defaultProps","shuffleArray","array","i","j","floor","random","App","exact","path","component","render","image1","Component","Loading","this","loading","Spinner","height","size","Sent","Alert","sent","noemail","Landing","sendMessage","formData","FormData","append","state","GOOGLE_FORM_EMAIL_ID","email","setState","axios","post","CORS_PROXY","GOOGLE_FORM_ACTION_URL","then","validate","catch","messageError","handleChange","event","a","value","checked","name","handleSubmit","preventDefault","validateEmail","username","password","password2","emailState","userExists","passMatch","bind","e","test","highlightClassName","searchWords","autoEscape","textToHighlight","bg","usertype","onSubmit","valid","invalid","onChange","LandingPage","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d5265f2c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, NavItem, UncontrolledDropdown, Collapse, \n        DropdownMenu, DropdownItem, NavbarToggler, Nav,\n        DropdownToggle, Navbar, Container, NavbarText,\n        NavbarBrand } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport NavLogo from '../img/mainlogo.png';\nimport { MdSettings } from \"react-icons/md\";\nimport './nav.css'\n\nfunction RegularSettings() {\n  return (\n    <NavItem>\n    <UncontrolledDropdown nav inNavbar>\n      <DropdownToggle nav caret style={{color:\"white\"}}>\n        <MdSettings/>\n      </DropdownToggle>\n      <DropdownMenu right>\n        <NavLink style={{color:'black'}} \n          to={process.env.PUBLIC_URL + \"/mock/profile\"}>\n          <DropdownItem>\n          Profile\n          </DropdownItem>\n        </NavLink>\n        <DropdownItem href={process.env.PUBLIC_URL}>\n          Sign Out</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n    </NavItem>\n  )\n}\nfunction HamburgerSettings() {\n  return (\n    <div>\n        <NavItem>\n          <NavLink style={{color:'black', padding:'0'}} \n            to={process.env.PUBLIC_URL + \"/mock/profile\"}>\n            <Button color=\"light\">\n            Profile\n            </Button>\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n            <Button color=\"light\" href={process.env.PUBLIC_URL}>\n            Sign Out\n            </Button>\n        </NavItem>\n    </div>\n  )\n}\n\nconst AppNavbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"success\" light expand=\"md\">\n        \n        <NavLink to={process.env.PUBLIC_URL + \"/mock\"} \n          style={{padding:'0'}}>\n          <img style={{maxWidth:'2em'}} src={NavLogo} alt=\"Logo\" />\n\n        </NavLink>\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='m-auto' navbar>\n\n            <NavItem>\n              <NavLink style={{color:'black', padding:'0'}} \n                to={process.env.PUBLIC_URL + \"/mock\"}>\n                <Button color=\"light\">\n                Home\n                </Button>\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink style={{color:'black', padding:'0'}} \n                to={process.env.PUBLIC_URL + \"/mock/dashboard\"}>\n                <Button color=\"light\">\n                Find Other Interns\n                </Button>\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink style={{color:'black', padding:'0'}} \n                to={process.env.PUBLIC_URL + \"/mock/recruiters\"}>\n                <Button color=\"light\">\n                Find Recruiters\n                </Button>\n              </NavLink>\n            </NavItem>\n\n            { isOpen ?  <HamburgerSettings /> : <RegularSettings /> }\n\n          </Nav>\n        </Collapse>\n\n      </Navbar>\n    </div>\n  );\n}\n\nexport default AppNavbar;","import React from 'react';\r\nimport { Container, Jumbotron, Toast, ToastHeader } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport MainLogo from './img/mainlogo.png';\r\n\r\nfunction MainMenu() {\r\n  return (\r\n    <div style={{padding:'0'}}>\r\n    <Toast style={{padding:'0'}}>\r\n      <ToastHeader>\r\n        @Search411\r\n      </ToastHeader>\r\n\r\n      <Jumbotron style={{paddingBottom:'9em'}}>\r\n      <p style={{textAlign:'center', \r\n        display: 'flex', justifyContent: 'center'}}>\r\n        This doesn't have to be you.\r\n      </p>\r\n      <div style={{display: 'flex', justifyContent: 'center', \r\n        padding:\"0.6em\", bgcolor: \"grey\"}}>\r\n        <img style={{maxWidth:'7em'}} src={MainLogo} alt=\"Logo\" />\r\n      </div>\r\n      <div>\r\n        <Container style={{display: 'flex', \r\n          justifyContent: 'center', padding:\"1em\",}}>\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/register\"} \r\n            className=\"btn btn-success\">Sign Up</NavLink>\r\n        </Container> \r\n      </div>\r\n      <div style={{textAlign:'center',\r\n        display: 'flex', justifyContent: 'center'}}>\r\n        Already a member?\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <NavLink to={process.env.PUBLIC_URL + \"/mock/login\"}>\r\n          Sign In\r\n        </NavLink>\r\n      </div>\r\n      </Jumbotron>\r\n\r\n    </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainMenu;","import React from 'react';\r\n\r\nfunction Notice(props) {\r\n  if (props.type === 'postcomment' || props.type === 'recruiters'\r\n      || props.type === 'uploadresume'){\r\n    return (\r\n      <span style={{display: 'flex', justifyContent: 'center'}}>\r\n        Functionality is not present as website is a mockup.\r\n      </span>\r\n    )\r\n  }\r\n  else if (props.type === 'login'){\r\n    return (\r\n      <span style={{display: 'flex', justifyContent: 'center'}}>\r\n        Functionality is not present as website is a mockup.\r\n        Click \"Let's Go\" with any information.\r\n      </span>\r\n    );\r\n  }\r\n  else if (props.type === 'register'){\r\n    return (\r\n      <span style={{display: 'flex', justifyContent: 'center'}}>\r\n        Functionality is not present as website is a mockup.\r\n        Click \"Submit\" with any information.\r\n      </span>\r\n    );\r\n  }\r\n  else {\r\n    return (null)\r\n  }\r\n\r\n}\r\n\r\nexport default Notice;","import React, { useState } from \"react\";\nimport { Tooltip, Container, Col,\nFormGroup, Input, Jumbotron, Toast, ToastHeader} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport Notice from './components/Notice'\n\nconst Register = (props) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n  return (  \n    <div>\n    <Toast style={{padding:'0'}}>\n      <ToastHeader>\n        @productname\n      </ToastHeader>\n\n      <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \n      toggle={toggle}><Notice type=\"register\"/></Tooltip>\n      <Jumbotron>\n      <div>\n        <h4 style={{color:'green',display: 'flex', \n        justifyContent: 'center'}}>Register</h4>\n      </div>\n      <Notice type=\"register\"/>\n      <Container className=\"App\" id=\"notice\">\n        <Col>\n          <FormGroup >\n            <Input type=\"username\" placeholder=\"email\"/>\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"email\"  placeholder=\"username\" />\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"password\" placeholder=\"password\" />\n          </FormGroup>\n        </Col>\n        <Col>\n          <FormGroup>\n            <Input type=\"confirmpassword\" placeholder=\"Confirm Password\" />\n          </FormGroup>\n        </Col>\n        \n      </Container>\n      <div >\n        <div style={{display: 'flex', justifyContent: 'right'}}>\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/dashboard\"}\n          className=\"btn btn-success\">Submit {'>'}</NavLink>\n        </div>\n        <div style={{display: 'flex', justifyContent: 'right'}}>\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/\"}\n            className=\"btn btn-success\">Back</NavLink>\n        </div>\n      </div>\n    </Jumbotron>\n\n    </Toast>\n    </div>\n  );\n\n}\n\n\nexport default Register;","import React, {useState} from 'react';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Input,\r\n  Tooltip, Toast, ToastHeader\r\n} from 'reactstrap';\r\nimport Jumbotron from 'reactstrap/lib/Jumbotron';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Notice from './components/Notice'\r\nimport './css/Login.css';\r\n\r\n\r\nconst Login = (props) => {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <div>\r\n    <Toast style={{padding:'0'}}>\r\n      <ToastHeader>\r\n        @productname\r\n      </ToastHeader>\r\n    <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \r\n      toggle={toggle}><Notice type=\"login\"/></Tooltip>\r\n    <Jumbotron>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <Container className=\"App\">\r\n\r\n        <div style={{textAlign:\"center\", width:\"20em\"}}>\r\n          <h4 style={{color:\"green\"}}>Sign in and get grinding.</h4>\r\n        </div>\r\n        <Notice type=\"login\"/>\r\n          <Form className=\"form\" id=\"notice\">\r\n            <Col>\r\n              <FormGroup>\r\n                <Input type=\"email\" placeholder=\"Email Address\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Input type=\"password\" placeholder=\"Password\" />\r\n              </FormGroup >\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <a style={{color:\"green\"}} >Forgot your password?</a>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <a style={{color:\"green\"}} >Don't have an account?</a>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/dashboard\"}\r\n          className=\"btn btn-success\">Let's go {'>'}</NavLink>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <NavLink to={process.env.PUBLIC_URL +\"/mock/\"}\r\n          className=\"btn btn-success\">Back</NavLink>\r\n        </div>\r\n      </div>\r\n    </Jumbotron>\r\n    </Toast>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport {Toast, ToastBody, ToastHeader,  Form, FormGroup, Badge, \r\n  Input, Tooltip, UncontrolledCollapse, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MdMoreHoriz } from \"react-icons/md\";\r\nimport Notice from './components/Notice'\r\n\r\nconst Comments = (props) =>  {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return(\r\n    <div>\r\n      {props.logged_in ? <div>\r\n        <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \r\n        toggle={toggle}><Notice type=\"postcomment\"/></Tooltip>\r\n        <h5><Badge color=\"primary\"\r\n        href={process.env.PUBLIC_URL + \"/mock/dashboard#\"} \r\n        id=\"postcomment\">Post a Comment</Badge></h5>\r\n        <UncontrolledCollapse toggler=\"#postcomment\">\r\n        <Form>\r\n          <FormGroup>\r\n            <Input type=\"textarea\" placeholder=\"Body\"/>\r\n            <Badge href={process.env.PUBLIC_URL + \"/mock/dashboard#\"}\r\n            color=\"primary\" pill id=\"notice\">\r\n            Submit</Badge>\r\n          </FormGroup>\r\n        </Form>\r\n        </UncontrolledCollapse></div>: null }\r\n\r\n      <Toast>\r\n        <ToastHeader>\r\n          @edgar-al-inpo\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          ugh idk what to do im graduating next year<br></br>\r\n          rip life\r\n        </ToastBody>\r\n\r\n        {props.logged_in ? \r\n        <div>\r\n          <ToastHeader id=\"comments1\">\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n            Comments</NavLink>\r\n          </ToastHeader>\r\n          <UncontrolledCollapse toggler=\"#comments1\" \r\n            style={{background: 'lightgray', padding:'0'}}>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@homer</b><br></br>same, still don't have any internship experience\r\n            </Toast>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@eecs_</b>{'  '}\r\n              <Badge color=\"primary\" pill >\r\n                Recruiter\r\n              </Badge>\r\n              <br></br>What's your major?\r\n            </Toast>\r\n\r\n            <ToastHeader >\r\n            <NavLink style={{display:'flex', justifyContent:'right'}} \r\n              to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n                Reply</NavLink>\r\n            </ToastHeader>\r\n          </UncontrolledCollapse >\r\n        </div> : null }\r\n      </Toast>\r\n\r\n      <Toast>\r\n        <ToastHeader>\r\n          @racecar_\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          you know school costs a lot of money, kinda needed that income :/\r\n        </ToastBody>\r\n\r\n        {props.logged_in ?\r\n        <div>\r\n          <ToastHeader id=\"comments2\">\r\n          \r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n            Comments</NavLink>\r\n          </ToastHeader>\r\n          <UncontrolledCollapse toggler=\"#comments2\" \r\n            style={{background: 'lightgray', padding:'0'}}>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@alyssa</b>{'  '}\r\n              <Badge color=\"primary\" pill >\r\n                Recruiter\r\n              </Badge>\r\n              <br></br>You should definitely contact Student \r\n              Financial Services and see what options you have available\r\n            </Toast>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@minecraftwillneverdie</b><br></br>^^^that and financial \r\n              aid office\r\n            </Toast>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b style={{color:\"green\"}}>@racecar_</b><br></br>It doesn't feel like \r\n              it really does much tho, at the end of the day you have to \r\n              pay what you have to pay\r\n            </Toast>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@x120</b><br></br>Well you don't know unless you see\r\n              what you have available, and how does it hurt?\r\n            </Toast>\r\n\r\n            <ToastHeader >\r\n            <NavLink style={{display:'flex', justifyContent:'right'}} \r\n              to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n                Reply</NavLink>\r\n            </ToastHeader>\r\n          </UncontrolledCollapse >\r\n        </div> : null}\r\n      </Toast>\r\n\r\n\r\n      <Toast>\r\n        <ToastHeader>\r\n          @michelle_anderson\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          I would appreciate a refund on 2020. Is a cancelled internship\r\n          warranty eligible?\r\n        </ToastBody>\r\n\r\n        {props.logged_in ? \r\n        <div>\r\n          <ToastHeader id=\"comments3\">\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n            Comments</NavLink>\r\n          </ToastHeader>\r\n          <UncontrolledCollapse toggler=\"#comments3\" \r\n            style={{background: 'lightgray', padding:'0'}}>\r\n            <span style={{color:\"gray\", paddingLeft:'0.6em'}}>Make the first!</span>\r\n            <ToastHeader >\r\n            <NavLink style={{display:'flex', justifyContent:'right'}} \r\n              to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n                Reply</NavLink>\r\n            </ToastHeader>\r\n          </UncontrolledCollapse >\r\n        </div> : null }\r\n      </Toast>\r\n\r\n\r\n      <Toast>\r\n        <ToastHeader>\r\n          @eboy22\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          Summer 2020 cancelled :( \r\n        </ToastBody>\r\n\r\n        {props.logged_in ?\r\n        <div>\r\n          <ToastHeader id=\"comments4\">\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n            Comments</NavLink>\r\n          </ToastHeader>\r\n          <UncontrolledCollapse toggler=\"#comments4\" \r\n            style={{background: 'lightgray', padding:'0'}}>\r\n            <span style={{color:\"gray\", paddingLeft:'0.6em'}}>Make the first!</span>\r\n            <ToastHeader >\r\n            <NavLink style={{display:'flex', justifyContent:'right'}} \r\n              to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n                Reply</NavLink>\r\n            </ToastHeader>\r\n          </UncontrolledCollapse >\r\n        </div> : null }\r\n      </Toast>\r\n\r\n\r\n      <Toast>\r\n        <ToastHeader>\r\n          @shrek\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          I'm gonna stick with an unpaid internship for now, at\r\n          least I get some experience\r\n        </ToastBody>\r\n\r\n        {props.logged_in ?\r\n        <div>\r\n          <ToastHeader id=\"comments5\">\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n            Comments</NavLink>\r\n          </ToastHeader>\r\n          <UncontrolledCollapse toggler=\"#comments5\" \r\n            style={{background: 'lightgray', padding:'0'}}>\r\n            <Toast style={{padding:'0.6em', justifyContent:'right'}}>\r\n              <b>@idkanymore</b><br></br>lol I'm doing the same thing\r\n            </Toast>\r\n\r\n            <ToastHeader >\r\n            <NavLink style={{display:'flex', justifyContent:'right'}} \r\n              to={process.env.PUBLIC_URL + \"/mock/dashboard#\"}>\r\n                Reply</NavLink>\r\n            </ToastHeader>\r\n          </UncontrolledCollapse >\r\n        </div> : null }\r\n      </Toast>\r\n      {props.logged_in ?\r\n        <div>\r\n          <div style={{paddingBottom:\"2em\"}}>\r\n          <Button id=\"notice\" color=\"link\" style={{padding:\"0\"}}>\r\n            <Badge pill color=\"primary\">\r\n            <MdMoreHoriz />\r\n            </Badge>\r\n          </Button>\r\n          </div>\r\n        </div> : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments;","import React, { useState } from 'react';\r\nimport {Button, ButtonGroup, Input, Tooltip, UncontrolledCollapse, \r\n    Jumbotron, Container } from 'reactstrap';\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport Notice from './components/Notice'\r\n\r\nconst Recruiters = (props) =>  {\r\n  const [cSelected, setCSelected] = useState([]);\r\n  const [rSelected, setRSelected] = useState(null);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n\r\n  const onCheckboxBtnClick = (selected) => {\r\n    const index = cSelected.indexOf(selected);\r\n    if (index < 0) {\r\n      cSelected.push(selected);\r\n    } else {\r\n      cSelected.splice(index, 1);\r\n    }\r\n    setCSelected([...cSelected]);\r\n  }\r\n  return (\r\n    <div>\r\n    <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \r\n      toggle={toggle}><Notice type=\"recruiters\"/></Tooltip>\r\n    <Jumbotron fluid style={{padding:'5em'}}>\r\n      <Container fluid>\r\n        <h1 className=\"display-3\">Recruiters</h1>\r\n        <p className=\"lead\">Search our list of signed up recruiters from all fields.</p>\r\n        <Input placeholder=\"Search Recruiters\"/>\r\n\r\n        <p>Find recruiters in fields:</p>\r\n        <ButtonGroup>\r\n          <Button outline color=\"primary\" onClick={() => \r\n            onCheckboxBtnClick(1)} active={cSelected.includes(1)}>Business</Button>\r\n          <Button outline color=\"primary\" onClick={() => \r\n            onCheckboxBtnClick(2)} active={cSelected.includes(2)}>Computer Science</Button>\r\n          <Button outline color=\"primary\" onClick={() => \r\n            onCheckboxBtnClick(3)} active={cSelected.includes(3)}>Medicine</Button>\r\n          <Button outline color=\"primary\" onClick={() => \r\n            onCheckboxBtnClick(4)} active={cSelected.includes(4)}>Research</Button>\r\n        </ButtonGroup>\r\n        <Button color=\"primary\" id=\"notice\"><MdSearch /></Button>\r\n        </Container>\r\n        \r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recruiters;","import React, { useState } from 'react';\r\nimport {Jumbotron, Row, Col , Container,\r\n  Button, Badge,  Tooltip } from 'reactstrap';\r\nimport { MdFileUpload } from \"react-icons/md\";\r\nimport Notice from './components/Notice'\r\n\r\nconst Profile = () =>  {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  let username = `{username}`\r\n  let email = `{email}`\r\n  let company = `{company}`\r\n  return(\r\n    <div>\r\n    <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"notice\" \r\n      toggle={toggle}><Notice type=\"uploadresume\"/></Tooltip>\r\n  \r\n    <Jumbotron fluid style={{paddingLeft:'10em', paddingRight:'10em'}}>\r\n      <Container fluid >\r\n        <h1 className=\"display-3\">Profile</h1>\r\n        <hr className=\"my-2\" />\r\n        <h5><Badge color=\"primary\">Intern</Badge></h5>\r\n      \r\n        <Row>\r\n          <Col xs=\"6\">Username</Col>\r\n          <Col xs=\"6\">{username}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"6\">Email</Col>\r\n          <Col xs=\"6\">{email}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"6\">Company</Col>\r\n          <Col xs=\"6\">{company}</Col>\r\n        </Row>\r\n        <Button style={{padding:'0'}} id=\"notice\" color=\"link\">\r\n          <Badge color=\"primary\" pill >\r\n            Upload Resume<MdFileUpload/>\r\n          </Badge>\r\n        </Button>\r\n      </Container>\r\n    </Jumbotron>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import * as vendor from 'css-vendor'\r\n\r\nconst generateStyleSheet = ({ imagesCount, duration, transition }) => {\r\n  const t = imagesCount * (duration + transition)\r\n  const p1 = Math.round(transition / t * 100)\r\n  const p2 = Math.round((duration + transition) / t * 100)\r\n  const p3 = Math.round(p2 * 1.1)\r\n\r\n  const vendorBackfaceVisibility = vendor.supportedProperty('backface-visibility')\r\n  const vendorAnimation = vendor.supportedProperty('animation')\r\n  const vendorKeyframes = vendor.supportedKeyframes('@keyframes')\r\n\r\n  let animation = ''\r\n  let keyframes = ''\r\n  if (vendorAnimation && vendorBackfaceVisibility && vendorKeyframes) {\r\n    animation = `${vendorBackfaceVisibility}: hidden;\r\n        ${vendorAnimation}: imageAnimation ${t}s linear infinite -0.5s;`\r\n\r\n    keyframes = `${vendorKeyframes} imageAnimation {\r\n          0% {\r\n            opacity: 0;\r\n            animation-timing-function: ease-in;\r\n          }\r\n          ${p1}% {\r\n            opacity: 1;\r\n            animation-timing-function: ease-out;\r\n          }\r\n          ${p2}% {\r\n            opacity: 1;\r\n          }\r\n          ${p3}% {\r\n            opacity: 0\r\n          }\r\n          100% {\r\n            opacity: 0\r\n          }\r\n        }`\r\n  }\r\n\r\n  return `#ReactBackgroundSlider > figure {\r\n        height: 100%;\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0px;\r\n        left: 0px;\r\n        color: transparent;\r\n        background-size: cover;\r\n        background-position: center center;\r\n        background-repeat: no-repeat;\r\n        opacity: 0;\r\n\r\n        z-index: -1000;\r\n        margin: 0;'\r\n        ${animation}\r\n      }\r\n      ${keyframes}\r\n    `\r\n}\r\n\r\nexport default generateStyleSheet","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateStyleSheet from './generateStyleSheet'\r\n\r\nconst NAME = 'ReactBackgroundSlider'\r\n\r\nconst injectCss = (css, meta) => {\r\n    const head = document.getElementsByTagName('head')[0]\r\n    const style = document.createElement('style')\r\n    style.setAttribute('type', 'text/css')\r\n    style.setAttribute('data-meta', meta)\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css\r\n    } else {\r\n      style.appendChild(document.createTextNode(css))\r\n    }\r\n    head.appendChild(style)\r\n  }\r\n  \r\n \r\nfunction BackgroundSlider ({\r\n  images,\r\n  duration,\r\n  transition\r\n}) {\r\n  React.useEffect(() => {\r\n    injectCss(\r\n      generateStyleSheet({\r\n        imagesCount: images.length,\r\n        duration,\r\n        transition\r\n      }),\r\n      NAME\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div id={NAME}>\r\n      {images.map((img, key) =>\r\n        <figure key={key}\r\n          style={{\r\n            backgroundImage: `url(${img})`,\r\n            animationDelay: `${(duration + transition) * key}s`\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBackgroundSlider.defaultProps = {\r\n  duration: 10,\r\n  transition: 2\r\n}\r\n\r\nBackgroundSlider.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  duration: PropTypes.number,\r\n  transition: PropTypes.number\r\n}\r\n\r\nexport default BackgroundSlider","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppNavbar from './components/AppNavbar';\nimport MainMenu from './MainMenu';\nimport Register from './Register';\nimport Login from './Login';\nimport Comments from './Comments';\nimport Recruiters from './Recruiters';\nimport Profile from './Profile';\nimport BackgroundSlider from './components/BackgroundSlider'\nimport './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport image1 from './img/background.png'\n\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <AppNavbar/>\n\n\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n            <Switch>\n            <Route exact path={process.env.PUBLIC_URL + \"/mock\"} \n                component={Comments}/>\n            <Route exact path={process.env.PUBLIC_URL + \"/mock/register\"} \n              component={Comments}/>\n            <Route exact path={process.env.PUBLIC_URL + \"/mock/login\"} \n              component={Comments}/>\n            <Route exact path={process.env.PUBLIC_URL + \"/mock/dashboard\"} \n              render={() => (<Comments logged_in={true}/>)} />\n            <Route exact path={process.env.PUBLIC_URL + \"/mock/recruiters\"} \n              render={() => (<Recruiters/>)} />\n            <Route exact path={process.env.PUBLIC_URL + \"/mock/profile\"} \n              render={() => (<Profile/>)} />\n            </Switch>\n\n            <Switch>\n              <Route exact path={process.env.PUBLIC_URL + \"/mock\"} \n                component={MainMenu}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/mock/register\"} \n                component={Register}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/mock/login\"} \n                component={Login}/>\n            </Switch>\n          </div>\n          \n        </Router>\n\n        <BackgroundSlider\n          images={shuffleArray([image1])}\n          duration={60} transition={20} />\n      </div>\n    );\n  }\n}\n\nexport { App } ;\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, \r\n  Route, Switch, NavLink } from 'react-router-dom';\r\nimport { App } from './App';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Jumbotron,\r\n  Button,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { MdLaptopMac } from \"react-icons/md\";\r\nimport ParticlesBg from \"particles-bg\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport axios from 'axios';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>{this.props.loading ? <Spinner \r\n        style={{ width: '3rem', height: '3rem' }} \r\n        size=\"sm\" color=\"primary\" /> : <h1></h1>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Sent extends Component {\r\n  render() {\r\n    return (\r\n      <div>        \r\n        <Alert color=\"success\" \r\n          isOpen={this.props.sent && !this.props.loading && \r\n          !this.props.noemail}>Thank you!</Alert>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      loading: false,\r\n      sent: 0,\r\n      validate: {\r\n        emailState: \"\",\r\n        userExists: false,\r\n        passMatch: true,\r\n        noemail: false,\r\n      },\r\n      \r\n      GOOGLE_FORM_EMAIL_ID: 'entry.1917533847',\r\n      GOOGLE_FORM_ACTION_URL: 'https://docs.google.com/forms/d/e/1FAIpQLSdKjV8dHasVOwux7YBK9LEuaMUhhYoqFaPrpwxNBSrDBbXNBQ/formResponse',\r\n      CORS_PROXY: 'https://cors-anywhere.herokuapp.com/'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  sendMessage = () => {  \r\n    const formData = new FormData() \r\n    formData.append(this.state.GOOGLE_FORM_EMAIL_ID, this.state.email)\r\n    this.setState({     \r\n      loading: true\r\n    })  \r\n    axios.post(this.state.CORS_PROXY + \r\n      this.state.GOOGLE_FORM_ACTION_URL, formData)\r\n      .then(() => {     \r\n        this.setState({     \r\n          email: '',\r\n          validate: {\r\n            noemail: false\r\n          },\r\n          loading: false,\r\n          sent: 1\r\n        })  \r\n    }).catch(() => {      \r\n      this.setState({        \r\n        messageError: true, \r\n        loading: false  \r\n      })  \r\n    })\r\n  }\r\n  validateEmail(e) {\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const { validate } = this.state;\r\n    if (this.state.email != \"\"){\r\n      validate.noemail = false;\r\n    }\r\n    if (emailRex.test(e.target.value)) {\r\n      validate.emailState = \"has-success\";\r\n    } else {\r\n      validate.emailState = \"has-danger\";\r\n    }\r\n    this.setState({ validate });\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const { target } = event;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const { name } = target;\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {  \r\n    event.preventDefault()\r\n    if (this.state.email != \"\"){\r\n      this.sendMessage()\r\n    } else{\r\n      this.validateEmail(event);\r\n      const { validate } = this.state;\r\n      validate.noemail = true;\r\n      this.setState({ validate });\r\n    }\r\n    \r\n  } //other stuff  }\r\n  render() {\r\n    const { email, username, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <hr className=\"my-2\" />\r\n          <p className=\"lead\" \r\n            style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Highlighter\r\n              highlightClassName=\"YourHighlightClass\"\r\n              searchWords={[\"future interns\", \"young job seekers\"]}\r\n              autoEscape={true}\r\n              textToHighlight=\"We're looking to make the recruiting process easier for \r\n              future interns and young job seekers.\"/>\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          <p style={{display: 'flex', justifyContent: 'center'}}>\r\n            To test out our proof of concept, we built a mock website\r\n            that mimicks what we expect the platform to be like.</p>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <NavLink to={process.env.PUBLIC_URL + \"/mock\"} \r\n            className=\"btn btn-primary\">Check out mock website <MdLaptopMac /></NavLink>\r\n          </div>\r\n          <ParticlesBg type=\"circle\" bg={true}/>\r\n        </Jumbotron>\r\n\r\n      <div>\r\n        <h3 style={{textAlign:\"center\"}}>Interested?</h3>\r\n        <p style={{textAlign:\"center\"}}>Sign up now to get the latest\r\n        updates and early user privileges.</p>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n      <h2 style={{textAlign:\"center\"}}>{this.props.usertype}</h2>\r\n      \r\n      <Container className=\"App\" \r\n        style={{display: 'flex', justifyContent: 'center'}}>\r\n\r\n        <Form  className=\"form\" onSubmit={this.handleSubmit}>\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                valid={this.state.validate.emailState === \"has-success\"}\r\n                invalid={this.state.validate.emailState === \"has-danger\"}\r\n                onChange={(e) => {\r\n                  this.validateEmail(e);\r\n                  this.handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            \r\n          </Col>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <Button color=\"primary\">Submit</Button>\r\n          </div>\r\n        </Form>\r\n        \r\n      </Container>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n        <Alert color=\"danger\" \r\n          isOpen={this.state.validate.noemail}>\r\n            Please enter an email address.</Alert>\r\n        </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n\r\n        <Loading loading={this.state.loading}/>\r\n        <Sent sent={this.state.sent} loading={this.state.loading} \r\n          noemail={this.state.validate.noemail}/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL +\"/\"} \r\n              component={Landing} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/login\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/register\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/dashboard\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/recruiters\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/interns\"} \r\n              component={App} />\r\n            <Route exact path={process.env.PUBLIC_URL +\"/mock/profile\"} \r\n              component={App} />\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\nexport default LandingPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport LandingPage from './Landing';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <LandingPage />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mainlogo.1099d795.png\";","module.exports = __webpack_public_path__ + \"static/media/background.9a157536.png\";"],"sourceRoot":""}