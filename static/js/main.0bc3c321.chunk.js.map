{"version":3,"sources":["components/AppNavbar.js","Register.js","LoginMopar.js","Dashboard.js","components/generateStyleSheet.js","components/BackgroundSlider.js","App.js","Landing.js","serviceWorker.js","index.js","img/basebg.png","img/UconnectlabBetaWhite.png"],"names":["AppNavbar","props","toggle","setState","dropdownOpen","state","isOpen","Navbar","color","Container","href","style","ButtonGroup","Button","ButtonDropdown","this","DropdownToggle","caret","DropdownMenu","DropdownItem","Component","Register","handleChange","event","a","target","value","type","checked","name","email","username","password","password2","validate","emailState","userExists","passMatch","registerSuccess","e","test","to","Jumbotron","display","justifyContent","className","Form","onSubmit","Col","FormGroup","Input","id","placeholder","valid","invalid","onChange","validateEmail","FormFeedback","LoginMopar","height","textAlign","width","GetStarted","InputGroup","InputGroupAddon","addonType","InputGroupText","addon","aria-label","BetaFeatures","FAQ","Dashboard","exact","path","component","generateStyleSheet","imagesCount","duration","transition","t","p1","Math","round","p2","p3","vendorBackfaceVisibility","vendor","vendorAnimation","vendorKeyframes","animation","keyframes","NAME","BackgroundSlider","images","React","useEffect","css","meta","head","document","getElementsByTagName","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","injectCss","length","map","img","key","backgroundImage","animationDelay","defaultProps","FCACheck","SignUp","padding","bgcolor","shuffleArray","array","i","j","floor","random","App","loggedIn","Toast","ToastHeader","ToastBody","render","usertype","image1","Loading","loading","Spinner","size","Sent","console","log","sent","noemail","Alert","Landing","sendMessage","formData","FormData","append","GOOGLE_FORM_EMAIL_ID","axios","post","CORS_PROXY","GOOGLE_FORM_ACTION_URL","then","catch","messageError","handleSubmit","preventDefault","bind","LandingPage","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.0bc3c321.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport topLogo from '../img/UconnectlabBetaWhite.png'\nimport { Button, ButtonGroup, ButtonDropdown, \n        DropdownMenu, DropdownItem, \n        DropdownToggle, Collapse, Navbar,\n        NavbarToggler, NavbarBrand, Nav,\n        NavItem, NavLink, Container, Progress } from 'reactstrap';\n\n\nclass AppNavbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    })\n  }\n\n  render() {\n\n    return (\n    <div>\n      <Navbar color=\"success\">\n        <Container>\n          <a href=\"/mock\" >\n            <h4 style={{color:\"white\"}}>Logo</h4>\n          </a>\n\n          <ButtonGroup>\n          <Button color=\"light\">Home</Button>\n\n          <Button color=\"light\">About</Button>\n          <Button color=\"light\">Contact</Button>\n          <Button color=\"light\">FAQ</Button>\n\n          <ButtonDropdown color=\"light\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret color=\"light\">\n              Settings\n            </DropdownToggle>\n            <DropdownMenu >\n              <DropdownItem color=\"light\">Profile</DropdownItem>\n              <DropdownItem>Find Other Interns</DropdownItem>\n              <DropdownItem>Find Recruiters</DropdownItem>\n              <DropdownItem href=\"/mock\">Sign Out</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </ButtonGroup >\n        <Button color=\"light\"href=\"/\">Exit Mockup</Button>\n        </Container> \n\n      </Navbar>\n\n\n    </div>\n    )\n  }\n}\n\nexport default AppNavbar;","import React, { Component } from \"react\";\nimport { Button, Alert, Container, Form, Col,\nFormGroup, FormFeedback, Label, Input, Jumbotron } from 'reactstrap';\nimport { Redirect } from 'react-router';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n\t    password2: \"\",\n      validate: {\n        emailState: \"\",\n        userExists: false,\n        passMatch: true,\n        registerSuccess: false\n      }\n    };\n  }\n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const { validate } = this.state;\n    if (emailRex.test(e.target.value)) {\n      validate.emailState = \"has-success\";\n    } else {\n      validate.emailState = \"has-danger\";\n    }\n    this.setState({ validate });\n  }\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n    await this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    const { email, username, password } = this.state;\n    if (this.state.registerSuccess) {\n      return (<Redirect to=\"/\" />\n      )\n    }\n    return (  \n      <div>\n        <Jumbotron>\n        <div>\n      <p style={{display: 'flex', justifyContent: 'center'}}>Register</p>\n      </div>\n      <Container className=\"App\">\n\n        <Form className=\"form\" onSubmit={(e) => this.setState({registerSuccess:true})}>\n          <Col>\n            <FormGroup>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                placeholder=\"email\"\n                value={email}\n                valid={this.state.validate.emailState === \"has-success\"}\n                invalid={this.state.validate.emailState === \"has-danger\"}\n                onChange={(e) => {\n                  this.validateEmail(e);\n                  this.handleChange(e);\n                }}\n              />\n              <FormFeedback valid>Valid email.</FormFeedback>\n              <FormFeedback>Invalid email.</FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Input\n                type=\"username\"\n                name=\"username\"\n                id=\"exampleUsername\"\n                placeholder=\"username\"\n                value={username}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e) => {\n                  const {  validate } = this.state;\n                  validate.passMatch = (e['target']['value'] === this.state.validate.password2);\n                  this.setState({ validate });\n                  this.handleChange(e)\n                }}\n\t\t\t\t        //onChange = { console.log('e') }\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Input\n                type=\"confirmpassword\"\n                name=\"confirmpassword\"\n                id=\"exampleConfirmPassword\"\n                placeholder=\"confirm password\"\n                invalid={!this.state.validate.passMatch}\n                onChange={(e) => {\n                  const { validate } = this.state;\n                  validate.password2 = e['target']['value'];\n                  validate.passMatch = (e['target']['value'] === this.state.password);\n                  this.setState({ validate });\n                  this.handleChange(e)\n                }}\n              />\n\t\t\t      <FormFeedback>Passwords don't match.</FormFeedback>\n            </FormGroup>\n          </Col>\n          <Button color=\"success\">Submit</Button>\n        </Form>\n      </Container>\n      </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Input,\r\n  Button\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Login.css';\r\nimport Jumbotron from 'reactstrap/lib/Jumbotron';\r\nclass LoginMopar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          \r\n          <Container className=\"App\">\r\n            <div height=\"41em\"></div>\r\n          <div style={{textAlign:\"center\", width:\"20em\"}}>\r\n            <h4 style={{color:\"green\"}}>Sign in and get grinding.</h4>\r\n          </div>\r\n            <Form className=\"form\">\r\n              <Col>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"exampleEmail\"\r\n                    placeholder=\"Email Address\"\r\n                  />\r\n                </FormGroup>\r\n                \r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n          <div >\r\n            <div style={{display: 'flex', justifyContent: 'right'}}>\r\n              <a style={{color:\"green\"}} href=\"https://www.mopar.com/en-us/forgot-password.html\">Forgot your password?</a>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'right'}}>\r\n              <a style={{color:\"green\"}} href=\"https://www.mopar.com/en-us/sign-in.html?tab=register\">Don't have an account?</a>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'right'}}>\r\n            <NavLink to=\"/mock/dashboard\" \r\n            className=\"btn btn-success\">Let's go ></NavLink>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <NavLink to=\"/mock/\" \r\n            className=\"btn btn-success\">Back</NavLink>\r\n          </div>\r\n          </div>\r\n          </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginMopar;","import React, { Component } from 'react';\r\nimport { Jumbotron, Button, Container, \r\n  Col, Row, Form, FormGroup, \r\n  InputGroup, InputGroupAddon, InputGroupText, Input} from 'reactstrap';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nclass GetStarted extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container >\r\n          <h1 className=\"display-5\">Get Started</h1>\r\n          <InputGroup>\r\n            <Input placeholder=\"Search Beta Features\" />\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText>\r\n                <Input addon type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            Search all categories\r\n          </InputGroup>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass BetaFeatures extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass FAQ extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Router>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Switch>\r\n              <Route exact path=\"/mock/dashboard/getstarted\" component={GetStarted} />\r\n              <Route exact path=\"/mock/dashboard/features\" component={BetaFeatures} />\r\n              <Route exact path=\"/mock/dashboard/faq\" component={FAQ} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  Dashboard,\r\n  GetStarted,\r\n  BetaFeatures,\r\n  FAQ\r\n};","import * as vendor from 'css-vendor'\r\n\r\nconst generateStyleSheet = ({ imagesCount, duration, transition }) => {\r\n  const t = imagesCount * (duration + transition)\r\n  const p1 = Math.round(transition / t * 100)\r\n  const p2 = Math.round((duration + transition) / t * 100)\r\n  const p3 = Math.round(p2 * 1.1)\r\n\r\n  const vendorBackfaceVisibility = vendor.supportedProperty('backface-visibility')\r\n  const vendorAnimation = vendor.supportedProperty('animation')\r\n  const vendorKeyframes = vendor.supportedKeyframes('@keyframes')\r\n\r\n  let animation = ''\r\n  let keyframes = ''\r\n  if (vendorAnimation && vendorBackfaceVisibility && vendorKeyframes) {\r\n    animation = `${vendorBackfaceVisibility}: hidden;\r\n        ${vendorAnimation}: imageAnimation ${t}s linear infinite -0.5s;`\r\n\r\n    keyframes = `${vendorKeyframes} imageAnimation {\r\n          0% {\r\n            opacity: 0;\r\n            animation-timing-function: ease-in;\r\n          }\r\n          ${p1}% {\r\n            opacity: 1;\r\n            animation-timing-function: ease-out;\r\n          }\r\n          ${p2}% {\r\n            opacity: 1;\r\n          }\r\n          ${p3}% {\r\n            opacity: 0\r\n          }\r\n          100% {\r\n            opacity: 0\r\n          }\r\n        }`\r\n  }\r\n\r\n  return `#ReactBackgroundSlider > figure {\r\n        height: 100%;\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0px;\r\n        left: 0px;\r\n        color: transparent;\r\n        background-size: cover;\r\n        background-position: center center;\r\n        background-repeat: no-repeat;\r\n        opacity: 0;\r\n\r\n        z-index: -1000;\r\n        margin: 0;'\r\n        ${animation}\r\n      }\r\n      ${keyframes}\r\n    `\r\n}\r\n\r\nexport default generateStyleSheet","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateStyleSheet from './generateStyleSheet'\r\n\r\nconst NAME = 'ReactBackgroundSlider'\r\n\r\nconst injectCss = (css, meta) => {\r\n    const head = document.getElementsByTagName('head')[0]\r\n    const style = document.createElement('style')\r\n    style.setAttribute('type', 'text/css')\r\n    style.setAttribute('data-meta', meta)\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css\r\n    } else {\r\n      style.appendChild(document.createTextNode(css))\r\n    }\r\n    head.appendChild(style)\r\n  }\r\n  \r\n \r\nfunction BackgroundSlider ({\r\n  images,\r\n  duration,\r\n  transition\r\n}) {\r\n  React.useEffect(() => {\r\n    injectCss(\r\n      generateStyleSheet({\r\n        imagesCount: images.length,\r\n        duration,\r\n        transition\r\n      }),\r\n      NAME\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div id={NAME}>\r\n      {images.map((img, key) =>\r\n        <figure key={key}\r\n          style={{\r\n            backgroundImage: `url(${img})`,\r\n            animationDelay: `${(duration + transition) * key}s`\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBackgroundSlider.defaultProps = {\r\n  duration: 10,\r\n  transition: 2\r\n}\r\n\r\nBackgroundSlider.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  duration: PropTypes.number,\r\n  transition: PropTypes.number\r\n}\r\n\r\nexport default BackgroundSlider","import React, { Component } from 'react';\nimport { Navbar, Container, Toast, ToastBody, ToastHeader, Progress,\nJumbotron } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router';\n\nimport AppNavbar from './components/AppNavbar';\nimport Register from './Register';\nimport LoginMopar from './LoginMopar';\nimport {  Dashboard,\n  GetStarted,\n  BetaFeatures,\n  FAQ} from './Dashboard';\nimport BackgroundSlider from './components/BackgroundSlider'\nimport image1 from './img/basebg.png'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass FCACheck extends Component {\n  render() {\n    return (\n       <Redirect to=\"/mock/register/regular\" />\n    )\n  }\n}\nclass SignUp extends Component {\n  render() {\n\n    return (\n      <div>\n        <Jumbotron>\n        <p style={{display: 'flex', justifyContent: 'center'}}>\n        This doesn't have to be you.\n        </p>\n        <div style={{display: 'flex', justifyContent: 'center', \n          padding:\"2em\", bgcolor: \"grey\"}}>\n          <a href=\"/mock\" >\n          <h1>Logo</h1>\n          </a>\n        </div>\n        <div>\n          <Container style={{display: 'flex', justifyContent: 'center', padding:\"1em\",}}>\n            <NavLink to=\"/mock/register\" className=\"btn btn-success\">Sign Up</NavLink>\n          </Container> \n        </div>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          Already a member?\n        </div>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <NavLink to=\"/mock/login\"> Sign In</NavLink>\n        </div>\n        </Jumbotron>\n      </div>\n    )\n  }\n}\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loggedIn: false\n    }\n  }\n  render() {\n\n    return (\n      <div>\n        <Router>\n          <AppNavbar/>\n\n\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n            <div>\n            <Toast id =\"toast1\">\n              <ToastHeader>\n                @edgar-al-inpo\n              </ToastHeader>\n              <ToastBody>\n                ugh idk what to do im graduating next year<br></br>\n                rip life\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @racecar_\n              </ToastHeader>\n              <ToastBody>\n                you know school costs a lot of money, kinda needed that income :/\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @michelle_anderson\n              </ToastHeader>\n              <ToastBody>\n                I would appreciate a refund on 2020. Is a cancelled internship\n                warranty eligible?\n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @eboy22\n              </ToastHeader>\n              <ToastBody>\n                Summer 2020 cancelled :( \n              </ToastBody>\n            </Toast>\n            <Toast>\n              <ToastHeader>\n                @shrek\n              </ToastHeader>\n              <ToastBody>\n                I'm gonna stick with an unpaid internship for now, at\n                least I get some experience\n              </ToastBody>\n            </Toast>\n\n            </div>\n            <Switch>\n            <Toast>\n              <ToastHeader>\n                @productname\n              </ToastHeader>\n            \n              <Route exact path=\"/mock/\" component={SignUp} />\n              <Route exact path=\"/mock/register\" component={FCACheck} />\n              <Route exact path=\"/mock/register/employee\" \n                render={(props) => <Register {...props} usertype=\"FCA\"/>} />\n              <Route exact path=\"/mock/register/regular\" \n                render={(props) => <Register {...props} usertype=\"Regular\"/>} />\n              <Route exact path=\"/mock/login\" component={LoginMopar} />\n              <Route exact path=\"/mock/dashboard\" component={Dashboard} />\n              <ToastBody>\n                <a href=\"https://umich.edu\">Copyright © 2020 <br></br>University of Michigan</a>\n              </ToastBody>\n              </Toast>\n            </Switch>\n          </div>\n          \n        </Router>\n\n        <BackgroundSlider\n          images={shuffleArray([image1])}\n          duration={60} transition={20} />\n\n\n      </div>\n    );\n  }\n}\n\nexport { App, FCACheck} ;\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom';\r\nimport AppNavbar from './components/AppNavbar';\r\nimport Register from './Register';\r\nimport LoginMopar from './LoginMopar';\r\nimport {App, FCACheck} from './App';\r\nimport {  Dashboard,\r\n    GetStarted,\r\n    BetaFeatures,\r\n    FAQ} from './Dashboard';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Jumbotron,\r\n  Button,\r\n  Spinner\r\n  \r\n} from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport axios from 'axios';\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>{this.props.loading ? <Spinner style={{ width: '3rem', height: '3rem' }} size=\"sm\" color=\"primary\" /> : <h1></h1>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Sent extends Component {\r\n  render() {\r\n    console.log(this.props.sent, !this.props.loading, !this.props.noemail)\r\n    return (\r\n      <div>\r\n        \r\n      <Alert color=\"success\" isOpen={this.props.sent && !this.props.loading && !this.props.noemail}>Thank you!</Alert>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      loading: false,\r\n      sent: 0,\r\n      validate: {\r\n        emailState: \"\",\r\n        userExists: false,\r\n        passMatch: true,\r\n        noemail: false,\r\n      },\r\n      \r\n      GOOGLE_FORM_EMAIL_ID: 'entry.1917533847',\r\n      GOOGLE_FORM_ACTION_URL: 'https://docs.google.com/forms/d/e/1FAIpQLSdKjV8dHasVOwux7YBK9LEuaMUhhYoqFaPrpwxNBSrDBbXNBQ/formResponse',\r\n      CORS_PROXY: 'https://cors-anywhere.herokuapp.com/'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  sendMessage = () => {  \r\n    const formData = new FormData() \r\n    formData.append(this.state.GOOGLE_FORM_EMAIL_ID, this.state.email)\r\n    this.setState({     \r\n      loading: true\r\n    })  \r\n    axios.post(this.state.CORS_PROXY + this.state.GOOGLE_FORM_ACTION_URL, formData)\r\n      .then(() => {     \r\n        console.log('asdasd')\r\n        this.setState({     \r\n          email: '',\r\n          validate: {\r\n            noemail: false\r\n          },\r\n          loading: false,\r\n          sent: 1\r\n        })  \r\n    }).catch(() => {      \r\n      this.setState({        \r\n        messageError: true, \r\n        loading: false  \r\n      })  \r\n    })\r\n  }\r\n  validateEmail(e) {\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const { validate } = this.state;\r\n    if (this.state.email != \"\"){\r\n      validate.noemail = false;\r\n    }\r\n    if (emailRex.test(e.target.value)) {\r\n      validate.emailState = \"has-success\";\r\n    } else {\r\n      validate.emailState = \"has-danger\";\r\n    }\r\n    this.setState({ validate });\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const { target } = event;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const { name } = target;\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {  \r\n    event.preventDefault()\r\n    if (this.state.email != \"\"){\r\n      this.sendMessage()\r\n    } else{\r\n      this.validateEmail(event);\r\n      const { validate } = this.state;\r\n      validate.noemail = true;\r\n      this.setState({ validate });\r\n    }\r\n    \r\n  } //other stuff  }\r\n  render() {\r\n    const { email, username, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <hr className=\"my-2\" />\r\n          <p className=\"lead\" style={{display: 'flex', \r\n            justifyContent: 'center'}}>Description of our problem/solution.</p>\r\n          <hr className=\"my-2\" />\r\n          <p style={{display: 'flex', justifyContent: 'center'}}>Extended description.</p>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <NavLink to=\"/mock/\" className=\"btn btn-primary\">Mock Website</NavLink>\r\n          </div>\r\n        </Jumbotron>\r\n      <div>\r\n        <h3 style={{textAlign:\"center\"}}>Interested?</h3>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n      <h2 style={{textAlign:\"center\"}}>{this.props.usertype}</h2>\r\n      \r\n      <Container className=\"App\" style={{display: 'flex', justifyContent: 'center'}}>\r\n\r\n        <Form  className=\"form\" onSubmit={this.handleSubmit}>\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                valid={this.state.validate.emailState === \"has-success\"}\r\n                invalid={this.state.validate.emailState === \"has-danger\"}\r\n                onChange={(e) => {\r\n                  this.validateEmail(e);\r\n                  this.handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            \r\n          </Col>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <Button >Submit</Button>\r\n          </div>\r\n        </Form>\r\n        \r\n      </Container>\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n        <Alert color=\"danger\" isOpen={this.state.validate.noemail}>Please enter an email.</Alert>\r\n        </div>\r\n      <div style={{display: 'flex', justifyContent: 'center', padding:\"10px\"}}>\r\n\r\n        <Loading loading={this.state.loading}/>\r\n        <Sent sent={this.state.sent} loading={this.state.loading} noemail={this.state.validate.noemail}/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/mock\" component={App} />\r\n                    <Route exact path=\"/mock/register\" component={FCACheck} />\r\n                    <Route exact path=\"/mock/register/employee\" \r\n                        render={(props) => <Register {...props} usertype=\"FCA\"/>} />\r\n                    <Route exact path=\"/mock/register/regular\" \r\n                        render={(props) => <Register {...props} usertype=\"Regular\"/>} />\r\n                    <Route exact path=\"/mock/login\" component={LoginMopar} />\r\n                    <Route exact path=\"/mock/dashboard\" component={Dashboard} />\r\n                </Switch>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default LandingPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LandingPage from './Landing';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <LandingPage />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/basebg.4216755a.png\";","module.exports = __webpack_public_path__ + \"static/media/UconnectlabBetaWhite.cb4a1686.png\";"],"sourceRoot":""}